---
title: "Pair-programming with LLMs"
date: "11-17-2023"
format: 
    pdf:
        number-sections: true
---

# Exercise: Explaining code

For this exercise, please begin by deciding which coding language you are most proficient in \texttt{Python} or \texttt{R}, so you can work with the other one:

-   If you chose \texttt{R}:

    Check out the code under `./data/code.py`, and the data under `./data/input-data-script.txt`
    Can you figure out what is going on here, what is the code doing?
    Use either the API or the Browser version of ChatGPT to help you figure out what the code is doing. 

-   If you chose \texttt{Python}:

    Check out the code under `./data/code.R`, and the data under `./data/input-data-script.txt`
    Can you figure out what is going on here, what is the code doing?
    Use either the API or the Browser version of ChatGPT to help you figure out what the code is doing. 

This is an example of a complex task where GPT-4 works a lot better than GPT-3.5. Do note however that at the time of writing GPT4-base (in: $0.03 / 1K tokens, out: $0.06 / 1K tokens) is ~30 times more expensive than GPT-3.5 (in: $0.0010 / 1K tokens, out: $0.0020 / 1K tokens). GPT4-turbo (in: $0.01 / 1K tokens, out: $0.03/1K tokens) is ~10 times more expensive than GPT-3.5.

**Answer**
\rotatebox{180}{\href{https://adventofcode.com/2021/day/4}{This code is a solution to a Bingo puzzle on Advent of Code 2021 - day 4}}

In the next sections we are going to keep working with this code

# Exercise: Document code
Part of the reason why this code was so hard to read was that it was written without documentation.
We're going to fix that. Use ChatGPT to help you write decent documentation for your file of choice. 
Adjust the file accordingly, this will be needed for the next section.

# Exercise: Translation between code languages
While it is fun to work in a different language, we prefer to work in the language we know best. 
Use ChatGPT to help you translate the code to your language of choice. 

\textcolor{red}{Don't blindly run code generated by LLMs, make sure you understand what is going on!}
For this toy example the risks are very low, but it's best to make this a habbit from the start. 

Tips:

- Doing this per section of the code makes it easier

- The answer it should generate is `The winner is board 7 with a score of 53217!`, use this as your unit-test!

# Exercise (optional): Generate unit-test
We are gong to optimize the code you translated from language A to language B.
Here we need to be a bit more carefull if nothing breaks by editing the code. 
Use ChatGPT to write unittests for the following:

- Does reading the data give the expected result?
- Does drawing a number do what we expect? 
- Does return_winner detect a win?

# Exercise (optional): Optimize the code
Use ChatGPT to see if there are any parts of your code that can be optimized.
I suggest doing this per section to make sure the LLM remains focussed on the relevant parts. 


# Exercise: (Challenge) Generating code 
Try to solve part 2 of the puzzle on:
\rotatebox{180}{\href{https://adventofcode.com/2021/day/4}{https://adventofcode.com/2021/day/4}}

**Answer**
\rotatebox{180}{The answer to the second part of the puzzle for our input should be 2776 with board 34.}

Your code should now solve for the puzzle inputs of Advent-of-Code day 4 2021 as a second check.
 
# Exercise: (Challenge) Generating code
See if you can also get the solution to the second part for the language that wasn't your first choice!