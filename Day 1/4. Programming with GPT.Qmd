---
title: "Programming with GPT"
subtitle: "*Time to Pair up*"
author: "Alex van Vorstenbosch"
footer: "Pair-programming with LLMs"
title-slide-attributes:
    data-background-image: "./figures/pair-programming-with-llms.webp"
    data-background-opacity: "0.5"

date: "11-17-2023"
---

## Overview
- Introduction to the OpenAI API
- Pair-programming with LLM's

## Overview
- <span class="highlighted-text">Introduction to the OpenAI API</span>
- Pair-programming with LLM's

# Introduction to the OpenAI API

## Introduction to the OpenAI API
- We'll be calling the API directly from Python or R
```{.python code-line-numbers="|1-6|8-10|12-25|15|16-21|22|23|24|"}
# Specify the path to your API-credentials file
import yaml
file_path = "credentials.yml"
with open(file_path, 'r') as yaml_file:
    credentials = yaml.safe_load(yaml_file)
openai.api_key = credentials["OPENAI_API_KEY"]

# You can also use an .env file
import os
openai.api_key = os.getenv("OPENAI_API_KEY")

# Get a model response
import openai
response = openai.ChatCompletion.create(
    model="gpt-3.5-turbo", 
    messages=[
        {"role": "system", "content": "You are a helpful assistant."},
        {"role": "user", "content": "Who are you?"},
        {"role": "assistant", "content": "Hello! I'm ChatGPT. How can I assist you today?"},
        {"role": "user", "content": "What can the OpenAI API do?"}
    ],
    temperature=1     # The randomness setting of the model: 0 is deterministic, 2 is most random
    n = 1             # How many completions do we want the model to generate
    max_tokens=np.inf # How many tokens is the model allowed to use
)
```